name: Deploy Image to Kubernetes

on:
  workflow_call:
    inputs:
      target_environment:
        description: "The GCP Namespace to Deploy To"
        required: true
        type: string
      image_name:
        description: "The gcr.io/gallop-api image to deploy "
        required: true
        type: string
      release_suffix:
        description: "Follows the image_name in helm release to provide uniqueness when deploying multiple configurations of the same image"
        required: false
        default: ""
        type: string
      tag_to_deploy:
        description: "The gcr.io/gallop-api/(image-name) image Tag to deploy"
        required: true
        default: "master"
        type: string
      replica_count:
        description: "The number of Pod replicas to create"
        required: true
        type: string
        default: "1"
      helm_deploy_set_env_vars:
        description: "If you have non-sensitive environment variables to pass to the deploy do it here"
        required: false
        default: ""
        type: string
      infrastructure_folder:
        description: "If your deployment should reference a directory other than .infra, use this variable, specify the exact path with the . (ex. .cron_infra)"
        required: false
        default: ".infra"
        type: string
    secrets:
      GKE_SA_KEY:
        required: true
      HELM_DEPLOY_SET_SECRET_ENV_VARS:
        required: false #This may be required but pass empty string?
      # Below are Repository Environment secrets we need to potentailly support
      CLUSTER_NAME:
        required: false
      DB_READER_IP:
        required: false
      DB_WRITER_IP:
        required: false
      ACCOUNTS_DB_PASSWORD:
        required: false               
      ANALYTICS_DB_PASSWORD:
        required: false
      API_DB_PASSWORD:
        required: false
      CHARGEBEE_API_KEY:
        required: false
      COIN_API_KEY:
        required: false
      CURAGG_DB_PASSWORD:
        required: false
      ETHAGG_DB_PASSWORD:
        required: false
      ETHEREUM_API_URL:
        required: false
      ETHMARKETPLACE_DB_PASSWORD:
        required: false
      ETHSCRAPER_DB_PASSWORD:
        required: false
      ETHSCRIPTS_DB_PASSWORD:
        required: false
      INTEGRITY_DB_PASSWORD:
        required: false               
      MIGRATIONS_DB_PASSWORD:
        required: false
      MONGODB_ROOT_PASSWORD:
        required: false
      OVERAGES_DB_PASSWORD:
        required: false
      POLMARKETPLACE_DB_PASSWORD:
        required: false
      READONLY_DB_PASSWORD:
        required: false
      SKNMARKETPLACE_DB_PASSWORD:
        required: false
      SOLAGG_DB_PASSWORD:
        required: false
      SOLANA_API_URL:
        required: false
      SOLSCRAPER_DB_PASSWORD:
        required: false
env:
  PROJECT_ID: gallop-api

jobs:
  ###################################
  # Run kubectl/Helm related scripts
  ###################################
  reusable_image_deploy_job:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target_environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: GCP authentication
        uses: google-github-actions/auth@v0.8.1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          create_credentials_file: true

      - name: GKE authentication
        uses: google-github-actions/get-gke-credentials@v0.8.0
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          location: ${{ secrets.CLUSTER_LOCATION }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Helm Install
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Print and Lint Helm chart
        run: |
          helm template ${{ inputs.image_name }}${{ inputs.release_suffix }} ${{ inputs.infrastructure_folder }} \
            -f ${{ inputs.infrastructure_folder }}/${{ inputs.target_environment }}-values.yaml \
            --set count=${{ inputs.replica_count }} \
            --set image.name=${{ inputs.image_name }} \
            --set image.tag=${{ inputs.tag_to_deploy }} \
            --namespace ${{ inputs.target_environment }} \
            --debug \
            --set secrets=OMITTED \
            ${{ inputs.helm_deploy_set_env_vars }}

          helm lint ${{ inputs.infrastructure_folder }} \
            -f ${{ inputs.infrastructure_folder }}/${{ inputs.target_environment }}-values.yaml \
            --namespace ${{ inputs.target_environment }} \
            --strict \
            --debug

      - name: Deploy Application
        run: |
          helm upgrade ${{ inputs.image_name }}${{ inputs.release_suffix }} ${{ inputs.infrastructure_folder }} \
            -f ${{ inputs.infrastructure_folder }}/${{ inputs.target_environment }}-values.yaml \
            --set count=${{ inputs.replica_count }} \
            --set image.name=${{ inputs.image_name }} \
            --set image.tag=${{ inputs.tag_to_deploy }} \
            --namespace ${{ inputs.target_environment }} \
            --create-namespace \
            --install \
            --debug \
            --wait \
            ${{ secrets.HELM_DEPLOY_SET_SECRET_ENV_VARS }}
            ${{ inputs.helm_deploy_set_env_vars }}
            

  #test-deployment:
  #Run some Postman Tests
